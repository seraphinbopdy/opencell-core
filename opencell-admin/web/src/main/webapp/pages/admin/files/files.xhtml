<ui:composition xmlns="http://www.w3.org/1999/xhtml"
				xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
				xmlns:f="http://xmlns.jcp.org/jsf/core"
				xmlns:h="http://xmlns.jcp.org/jsf/html"
				xmlns:hftl="http://hftl.org"
				xmlns:p="http://primefaces.org/ui"
				template="/layout/template.xhtml">
 	
 
	<ui:define name="metadata">
		<f:metadata>
			<f:event type="preRenderView" listener="#{filesBean.init}" />
		</f:metadata>
	</ui:define>

    <ui:define name="body">
        <h:form id="crumbmenuForm">
            <p:breadCrumb homeDisplay="text" id="crumbmenu">
                <p:menuitem value="#{messages['menu.admin']}" disabled="true" />
                <p:menuitem outcome="fileExplorer" value="#{messages['menu.fileExplorer']}" />
            </p:breadCrumb>
        </h:form>
        <p:dialog modal="true" widgetVar="statusDialog" header="Status" draggable="false" closable="false" resizable="false">
            <p:graphicImage value="/img/ajaxloadingbar.gif" />
        </p:dialog>

        <p:panel id="fileExplorer">

            <h:form>
                <p:growl id="messages" showDetail="true" />
                <p:dataTable var="file" value="#{filesBean.fileList}" sortBy="#{file.name}" resizableColumns="true">
                    <f:facet name="header">
                        <p:spacer width="8" />
                        <p:commandButton icon="pi pi-arrow-up" value="Up" rendered="#{filesBean.hasSelectedFolder()}" action="#{filesBean.setSelectedFolder('..')}" update=":fileExplorer"
                            process="@this" />
                        <p:spacer width="8" />
                        <h:outputText value="#{messages['fileExplorer.currentDirectory']}: #{filesBean.selectedFolder}" rendered="#{filesBean.hasSelectedFolder()}" />
                    </f:facet>
                    <p:column headerText="#{messages['fileExplorer.fileName']}" sortBy="#{file.name}">
                        <p:commandLink action="#{filesBean.setSelectedFolder(file.name)}" rendered="#{file.isDirectory()}" update=":fileExplorer" process="@this">
                            <i class="fa fa-folder-o fa-2x"></i>
                            <p:spacer width="8" />
                            <h:outputText value='#{file.name}' />
                        </p:commandLink>
                        <p:commandLink action="#{filesBean.setSelectedFileName(file.name)}" rendered="#{!file.isDirectory()}" update=":fileExplorer" process="@this">
                            <i class="fa fa-file-#{filesBean.getFileType(file.name)}-o fa-2x"></i>
                            <p:spacer width="8" />
                            <h:outputText value='#{file.name}' />
                        </p:commandLink>
                    </p:column>

                    <p:column headerText="#{messages['fileExplorer.fileDate']}" sortBy="#{file.lastModified()}">
                        <h:outputText value="#{file.lastModified()}">
                            <f:convertDateTime pattern="yyyy-MM-dd HH:mm:ss" />
                        </h:outputText>
                    </p:column>
                </p:dataTable>
                <p:panel rendered="#{filesBean.selectedFileName!=null}" id="fileManageForm">
         			#{filesBean.selectedFileName}
					<p:commandButton value="#{messages['fileExplorer.download']}" icon="pi pi-arrow-down" ajax="false">
                        <p:fileDownload value="#{filesBean.selectedFile}" />
                        <f:param name="cid" value="#{jakarta.enterprise.context.conversation.id}" />
                    </p:commandButton>
                    <p:commandButton value="#{messages['fileExplorer.delete']}" icon="pi pi-trash" action="#{filesBean.deleteSelectedFile()}" update=":fileExplorer" process="@this"
                        rendered="#{filesBean.canUserDeleteEntity()}">
                        <p:confirm header="#{messages['commons.confirmationHeader']}" message="#{messages['fileExplorer.deleteConfirm']}" icon="pi pi-exclamation-triangle" />
                        <f:param name="cid" value="#{jakarta.enterprise.context.conversation.id}" />
                    </p:commandButton>
                </p:panel>
                <p:panel id="downloadZipfile" rendered="#{filesBean.selectedFileName==null}">
                    <p:commandButton value="#{messages['fileExplore.downloadZipfile']}" icon="pi pi-arrow-down" ajax="false">
                        <p:fileDownload value="#{filesBean.downloadZipFile}" />
                        <f:param name="cid" value="#{jakarta.enterprise.context.conversation.id}" />
                    </p:commandButton>
                </p:panel>
            </h:form>

            <h:form rendered="#{filesBean.selectedFileName!=null and filesBean.canUserUpdateEntity()}">
                <p:inputText id="newFilename" value="#{filesBean.newFilename}" />
                <p:commandButton value="#{messages['fileExplorer.renameFile']}" action="#{filesBean.renameFile()}" update=":fileExplorer">
                    <f:param name="cid" value="#{jakarta.enterprise.context.conversation.id}" />
                </p:commandButton>
            </h:form>

            <h:form rendered="#{filesBean.canUserUpdateEntity()}">

                <p:fieldset legend="#{messages['fileExplorer.directoryPanel']}" styleClass="clearLeft">

                    <hftl:decorateFormField fieldId="dirNameToCreate" label="#{messages['fileExplorer.createDirectory']}" rendered="#{filesBean.selectedFileName==null}">
                        <p:inputText id="dirNameToCreate" value="#{filesBean.directoryName}" />
                        <p:commandButton value="#{messages['fileExplorer.createDirectory']}" action="#{filesBean.createDirectory()}" update=":fileExplorer" process="@form">
                            <f:param name="cid" value="#{jakarta.enterprise.context.conversation.id}" />
                        </p:commandButton>
                    </hftl:decorateFormField>
                    <hftl:decorateFormField label="#{messages['fileExplorer.deleteDirectory']}" rendered="#{filesBean.currentDirEmpty}">
                        <p:commandButton value="#{messages['fileExplorer.deleteDirectory']}" action="#{filesBean.deleteDirectory()}" update=":fileExplorer" process="@form">
                            <p:confirm header="Confirmation" message="#{messages['fileExplorer.deleteDirectoryConfirm']}" icon="pi pi-exclamation-triangle" />
                            <f:param name="cid" value="#{jakarta.enterprise.context.conversation.id}" />
                        </p:commandButton>
                    </hftl:decorateFormField>
                </p:fieldset>
            </h:form>

            <h:form rendered="#{filesBean.selectedFileName==null and filesBean.canUserUpdateEntity()}">

                <p:fieldset legend="#{messages['fileExplorer.uploadFilesPanel']}" styleClass="clearLeft">
                    <hftl:decorateFormField fieldId="fileFormat" label="#{messages['fileExplorer.fileFormat']}">
                        <p:selectOneMenu id="fileFormat" value="#{filesBean.fileFormat}" onchange="submit()" valueChangeListener="#{filesBean.handleFileFormatChange}">
                            <hftl:objectConverter />
                            <f:selectItem itemLabel="#{messages['commons.select']}" />
                            <f:selectItems value="#{filesBean.getFileFormatList()}" var="t_" itemLabel="#{t_.code}" itemValue="#{t_}" />
                        </p:selectOneMenu>
                    </hftl:decorateFormField>
                    <hftl:decorateFormField fieldId="fileFormat" label="#{messages['fileExplore.unzipAutomately']}">
                        <p:selectBooleanCheckbox id="autoUnzip" value="#{filesBean.autoUnzipped}" styleClass="Padding10">
                            <p:ajax />
                        </p:selectBooleanCheckbox>
                    </hftl:decorateFormField>
                    <p:fileUpload fileUploadListener="#{filesBean.handleFileUpload}" multiple="true" mode="advanced" dragDropSupport="true" fileLimit="5" update=":fileExplorer"
                        styleClass="TexAlCenter clearLeft" />

                </p:fieldset>
            </h:form>
        </p:panel>
    </ui:define>

</ui:composition>